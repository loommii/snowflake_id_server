// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: snowflake_id_server.proto

package snowflakeidserverclient

import (
	"context"

	"snowflake_id_server/snowflake_id_server"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetIDResp = snowflake_id_server.GetIDResp
	PingResp  = snowflake_id_server.PingResp
	Request   = snowflake_id_server.Request

	SnowflakeIdServer interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*PingResp, error)
		GetID(ctx context.Context, in *Request, opts ...grpc.CallOption) (*GetIDResp, error)
	}

	defaultSnowflakeIdServer struct {
		cli zrpc.Client
	}
)

func NewSnowflakeIdServer(cli zrpc.Client) SnowflakeIdServer {
	return &defaultSnowflakeIdServer{
		cli: cli,
	}
}

func (m *defaultSnowflakeIdServer) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*PingResp, error) {
	client := snowflake_id_server.NewSnowflakeIdServerClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (m *defaultSnowflakeIdServer) GetID(ctx context.Context, in *Request, opts ...grpc.CallOption) (*GetIDResp, error) {
	client := snowflake_id_server.NewSnowflakeIdServerClient(m.cli.Conn())
	return client.GetID(ctx, in, opts...)
}
